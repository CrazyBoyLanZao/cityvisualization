{"version":3,"sources":["webpack:///./static/JS/cityaqi.js","webpack:///./static/JS/moredimention.js","webpack:///./static/JS/rainsheet.js","webpack:///src/App.vue","webpack:///./src/App.vue?127a","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./static/JS/raindown.js","webpack:///./static/JS/wordcloud.js","webpack:///./static/JS/Maps.js","webpack:///./static/JS/suggestmode.js","webpack:///./static/JS/heatcalendar.js"],"names":["$","__webpack_require__","echarts","__webpack_exports__","[object Object]","this","myCharts","init","document","getElementById","data","option","title","text","left","textStyle","color","grid","tooltip","trigger","xAxis","axisLine","lineStyle","yAxis","dataZoom","startValue","type","visualMap","top","right","pieces","gt","lte","outOfRange","series","name","markLine","silent","cityname","value","cityName","city","i","j","Number","f","getJSON","map","item","setOption","on","e","seriesName","split","date","dataIndex","replace","suggest","initMode","axios","d3","rainsheet","formatEN","time","Date","formatCN","getMonth","getDate","join","formatPoint","resultformatEN","resultformatCN","getFullYear","resultformatPoint","getDays","startTime","min","d","getTime","endTime","max","totalTimes","getresultDay","utils","parseToInt","num","parseInt","csv","then","allHieData","nest","key","t","barometerDate","mapData","xLabel","cityList","Object","keys","forEach","incArr","dayCN","day","dayData","inc","inc1","inc2","change","change1","change2","push","slice","margin","width","height","length","x","scaleBand","domain","range","paddingInner","paddingOuter","y","z","r","scaleLinear","rangeRound","Math","pow","bandwidth","select","remove","svg","append","attr","clientWidth","clientHeight","call","axisLeft","tickValues","tickSize","g","selectAll","style","axisTop","each","n","sqrt","innerR","outerR","console","log","rainSheet","bottom","totalDays","prov","initdarw","App","mounted","Maps","JS_Maps","word","wordcloud","rain","raindown","suggestions","suggestmode","cityAQI","cityaqi","heatMap","heatcalendar","moreDimention","groupColors","legend","itemGap","fontSize","parallelAxis","show","categories","dimension","inRange","parallel","parallelAxisDefault","nameGap","nameTextStyle","axisTick","splitLine","axisLabel","Mycharts","indexOf","get","res","parseFloat","schema","index","dim","inverse","serie","normal","opacity","some","splice","initMaps","initcityaqi","initrainDown","rainEvent","initcloud","initheatmap","heatmapevent","initdimention","dimentionevent","methods","buttonchange","sca","display","selectortype_template_index_0_src_App","render","_vm","_h","$createElement","_c","_self","attrs","id","staticStyle","text-align","font-size","font-family","_v","staticClass","_m","padding-left","margin-bottom","src","position","background-color","click","margin-top","staticRenderFns","float","padding","white-space","z-index","src_App","normalizeComponent","ssrContext","Vue","config","productionTip","el","components","template","__WEBPACK_IMPORTED_MODULE_0_axios__","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_export__","align","axisPointer","animation","label","backgroundColor","realtime","start","end","boundaryGap","onZero","nameLocation","areaStyle","emphasis","focus","markArea","itemStyle","yAxisIndex","raindata","a","Rain","AQIdata","AQI","maps","timedata","setTimeout","fillMaps","starttime","endtime","updatefillMap","dataCI","dataCIHB","CIHB","extend","ele","dataAQI","eledata","__WEBPACK_IMPORTED_MODULE_0_js2wordcloud__","__WEBPACK_IMPORTED_MODULE_0_js2wordcloud___default","__WEBPACK_IMPORTED_MODULE_1_axios__","__WEBPACK_IMPORTED_MODULE_2_echarts_lib_util_log__","async","createData","base","obj","it","rank","wc","imageShape","formatter","gridSize","maxFontSize","minFontSize","list","__WEBPACK_IMPORTED_MODULE_0__antv_l7__","__WEBPACK_IMPORTED_MODULE_1__antv_l7_maps__","__WEBPACK_IMPORTED_MODULE_2__antv_l7_district__","__WEBPACK_IMPORTED_MODULE_3__antv_l7_component__","createMark","MarkerPinImg","el1","createElement","className","el2","alignItems","background","borderRadius","el4","innerText","appendChild","el3","justifyContent","el5","alt","blue","calulate","star","now","accAdd","arg1","arg2","r1","r2","m","toString","colors","scene","center","pitch","zoom","minZoom","maxZoom","doubleClickZoom","logoVisible","green","countryLayer","moredimention","headmap","joinBy","adcode","depth","field","textAllowOverlap","fill","values","popup","enable","Html","props","NAME_CHN","pop","addMarkers","lnglat","lng","lat","response","updateRain","regeocode","addressComponent","catch","error","nodes","marker","element","extData","setLnglat","addMarker","updaterainplace","updateclouds","confirm","window","open","cityshangrao","cityjiujiang","citynanchang","cityjian","cityyichun","cityfuzhou","cityxinyu","cityjingdezhen","citypingxiang","cityganzhou","cityyingtan","filldata","createtimeData","THI","json","tempreature","humid","speed","humanconfrot","humidtem","getdata","elm","format","formatTime","calculable","orient","calendar","cellSize","borderWidth","yearLabel","coordinateSystem","MyCharts","val","da","apply","updateelement"],"mappings":"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","file":"static/js/app.5608650097cc7a12d4c3.js","sourcesContent":["import suggestmode from \"./suggestmode\";\n\nconst echarts = require('echarts');\nexport default class cityaqi{\n  constructor() {\n    this.myCharts = echarts.init(document.getElementById('AQI'))\n    this.data = null\n    this.option = {\n      // backgroundColor: '#363636',\n      title: {\n        text: null,\n        // left: '1%',\n        left:'center',\n        textStyle:{\n          color:\"#000000\"\n        }\n      },\n      grid:{\n        // right: '1%'\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      xAxis: {\n        data: null,\n        axisLine: {\n          lineStyle: {\n            color: '#000000'\n          }\n        }\n      },\n      yAxis: {\n        axisLine: {\n          lineStyle: {\n            color: '#000000'\n          }\n        }\n      },\n      dataZoom: [{\n        startValue: '2019-09-01'\n      }, {\n        type: 'inside'\n      }],\n      visualMap: {\n        top: 0,\n        right: 0,\n        pieces: [{\n          gt: 0,\n          lte: 50,\n          color: '#096'\n        }, {\n          gt: 50,\n          lte: 100,\n          color: '#76becc'\n        }, {\n          gt: 100,\n          lte: 150,\n          color: '#ff9933'\n        }, {\n          gt: 150,\n          lte: 200,\n          color: '#cc0033'\n        }, {\n          gt: 200,\n          lte: 300,\n          color: '#aa2116'\n        }, {\n          gt: 300,\n          color: '#72231a'\n        }],\n        outOfRange: {\n          color: '#ffffff'\n        },\n        textStyle: {\n          color:\"#000000\"\n        }\n      },\n      series: {\n        name: null,\n        type: 'line',\n        data: null,\n        markLine: {\n          silent: true,\n          lineStyle: {\n            color: '#333'\n          },\n          data: [{\n            yAxis: 50\n          }, {\n            yAxis: 100\n          }, {\n            yAxis: 150\n          }, {\n            yAxis: 200\n          }, {\n            yAxis: 300\n          }]\n        }\n      }\n    }\n    return this;\n    this.suggest = new suggestmode()\n  }\n  async initcityaqi(cityname ='南昌市') {\n    let value = f(cityname);\n    // console.log(value)\n    this.data = await $.getJSON('static/json/cityAQI/' + value + '.json')\n    // console.log(this.data)\n    // console.log( cityname + '城市AQI走势图')\n    this.option.title.text = cityname + 'AQI走势图'\n    this.option.series.name = cityname + '- AQI'\n    this.option.series.data = this.data.map(function (item) {\n      return item[1];\n    })\n    this.option.xAxis.data = this.data.map(function (item) {\n      return item[0];\n    })\n    this.myCharts.setOption(this.option);\n    this.myCharts.on('click',(e)=>{\n      let city = e.seriesName.split('-')[0]\n      let date = this.data[e.dataIndex][0].split(' ')[0].replace('/','-')\n      // console.log(date)\n      this.suggest.initMode(city,date)\n    })\n  }\n}\nfunction f(cityName) {\n  let city = ['南昌市','九江市','景德镇市','萍乡市','新余市','鹰潭市','赣州市','宜春市','上饶市','吉安市','抚州市']\n  for (let i in city){\n    if (cityName === city[i]){\n      let j = Number(i) + 1\n      return 'city_' + j\n    }\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/JS/cityaqi.js\n// module id = 8PEy\n// module chunks = 1","const echarts = require('echarts')\nconst axios = require('axios')\nexport default class moredimention {\n  constructor() {\n    this.groupColors = ['#d94e5d','#eac736','#50a3ba','#51e974','#5172e9']\n    this.option = {\n      title:{\n        text:'城市污染物对比关系图',\n        left:'center'\n      },\n      color:this.groupColors,\n      legend: {\n        bottom: 0,\n        data: [],\n        itemGap: 20,\n        textStyle: {\n          color: '#000000',\n          fontSize: 14\n        },\n      },\n      parallelAxis: [],\n      visualMap: {\n        show: false,\n        // min: 0,\n        // max: 150,\n        left: '620',\n        categories: [],\n        dimension:7,\n        inRange: {\n          color: this.groupColors //['#d94e5d','#eac736','#50a3ba']\n        },\n      },\n      parallel: {\n        left: '3%',\n        right: '10%',\n        bottom: '10%',\n        top:'16%',\n        // layout: 'vertical',\n        parallelAxisDefault: {\n          type: 'value',\n          name: 'AQI指数',\n          // nameLocation: 'start',\n          nameGap: 15,\n          nameTextStyle: {\n            color: '#000000',\n            fontSize: 10\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#000000'\n            }\n          },\n          axisTick: {\n            lineStyle: {\n              color: '#000000'\n            }\n          },\n          splitLine: {\n            show: true\n          },\n          axisLabel: {\n            // show:true,\n            color: '#000000'\n          }\n        }\n      },\n      series: []\n    };\n    this.Mycharts = echarts.init(document.getElementById('moreDimention'));\n  }\n\n  initdimention(city='上饶市') {\n    if (this.option.visualMap.categories.indexOf(city) !== -1)\n      return 0\n    axios.get('static/json/elementAir/' + city + '.json').then((res) => {\n     let data =  res.data.map(r=>{\n        return [r.date,Number.parseFloat(r['PM2.5']),Number.parseFloat(r['PM10'])\n          ,Number.parseFloat(r['CO']),Number.parseFloat(r['NO2']),\n          Number.parseFloat(r['SO2']),Number.parseFloat(r['O3']),r['城市名'],Number.parseFloat(r['AQI'])]\n      })\n      let schema = [\n        {name: 'date', index: 0, text: '日期'},\n        {name: 'PM2.5', index: 1, text: 'PM2.5'},\n        {name: 'PM10', index: 2, text: 'PM10'},\n        {name: 'CO', index: 3, text: 'CO'},\n        {name: 'NO2', index: 4, text: 'NO2'},\n        {name: 'SO2', index: 5, text: 'SO2'},\n        {name: 'O3', index: 6, text: 'O3'},\n        {name: '城市名', index: 7, text: '城市名'},\n        {name: 'AQI', index: 8, text: 'AQI'}\n      ];\n      this.option.parallelAxis = [\n        {dim: 0, name: schema[0].text, type: 'category',inverse:true},\n        {dim: 1, name: schema[1].text},\n        {dim: 2, name: schema[2].text},\n        {dim: 3, name: schema[3].text},\n        {dim: 4, name: schema[4].text},\n        {dim: 5, name: schema[5].text},\n        {dim: 6, name: schema[6].text},\n        {dim: 8, name: schema[8].text}]\n      let serie = {\n          name: city,\n          type: 'parallel',\n          lineStyle: {\n            normal: {\n              width: 1,\n              opacity: 0.5\n            }\n          },\n          data: data\n        }\n      this.option.series.push(serie)\n      this.option.legend.data.push(city)\n      this.option.visualMap.categories.push(city)\n\n      // this.option.series[0].name = city\n      this.Mycharts.setOption(this.option)\n    });\n  }\n  dimentionevent(heatcalendar){\n    this.Mycharts.on('legendselectchanged',(e)=>{\n      // delete  this.option.legend.selected[e.name];\n      this.option.legend.data.some((item,index)=>{\n        if(item===e.name){\n          this.option.visualMap.categories.splice(index,1)\n          this.option.legend.data.splice(index,1)\n          return true;\n        }\n      })\n      this.option.series.some((item,index)=>{\n        if(item.name===e.name){\n          this.option.visualMap.categories.splice(index,1)\n          this.option.series.splice(index,1)\n          return true;\n        }\n      })\n      this.Mycharts.setOption(this.option);\n      console.log(e)\n    })\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/JS/moredimention.js\n// module id = null\n// module chunks = ","import {time} from \"echarts/lib/export\";\n\nconst d3 = require('d3')\nexport default class rainsheet {\n  constructor() {\n    this.date = {\n      formatEN: time => {\n        return new Date(time.replace(/月/, '/').replace(/日/, '/'))\n      },\n      formatCN: time => {\n        return [time.getMonth() + 1 + \"月\", time.getDate() + \"日\"].join(\"\")\n      },\n      formatPoint: time => {\n        return [time.getDate()]\n      },\n      resultformatEN: time => {\n        return new Date(time.replace(/年/, '/').replace(/月/, '/').replace(/日/, '/'))\n      },\n      resultformatCN: time => {\n        return [time.getFullYear() + \"年\", (time.getMonth() + 1) + \"月\"].join(\"\")\n      },\n      resultformatPoint: time => {\n        return [time.getFullYear() + \".\" + (time.getMonth() + 1)]\n      },\n      getDays: data => {\n        let startTime = d3.min(data, d => this.date.formatEN(d['日期']).getTime())\n        let endTime = d3.max(data, d => this.date.formatEN(d['日期']).getTime())\n        let totalTimes = (endTime - startTime) / 864e5 + 1\n        return {\n          startTime,\n          endTime,\n          totalTimes\n        }\n      },\n      getresultDay: data => {\n        let startTime = d3.min(data, d => this.date.resultformatEN(d['日期']).getTime())\n        let endTime = d3.max(data, d => this.date.resultformatEN(d['日期']).getTime())\n        let totalTimes = (endTime - startTime) / 2592e6 + 1\n        return {\n          startTime,\n          endTime,\n          totalTimes\n        }\n      }\n    }\n\n    this.utils = {\n      parseToInt: function (num) {\n        return \"\" === num ? 0 : parseInt(num)\n      }\n    }\n    return this;\n  }\n\n  initdarw() {\n//日期统计和日期转换  //中文-月日转换成数字格式 例如'1月15日'转换成'2020/1/15'\n\n    d3.csv('static/json/rainsheet/month.csv').then(data => {\n      let allHieData = d3.nest().key(t => t[\"类型\"]).map(data);\n      let city = d3.nest().key(t => t[\"城市名\"]).key(t => t[\"日期\"]).map(allHieData[\"$1 \"]);\n      //晴雨表中间数据\n      //画图数据，长度等于省级的数量\n      let barometerDate = {};\n      let mapData = [];//数据\n      let xLabel = [];//标签\n      let cityList = []; //地区省 清单\n      barometerDate = this.date.getresultDay(data); //晴雨表数据\n\n      // for (let i = 0; i < barometerDate.totalTimes; i++) {\n      //   let time = 2592e6 * i;\n      //   // console.log(barometerDate.startTime + time)\n      //   let day = new Date(barometerDate.startTime + time);\n      //   // console.log(barometerDate.startTime)\n      //   xLabel.push(this.date.resultformatPoint(day))\n      //   // console.log(day)\n      // }\n      xLabel = [['2019.9'], ['2019.10'], ['2019.11'], ['2019.12'], ['2020.1'], ['2020.2'], ['2020.3'], ['2020.4']]\n      // console.log(xLabel)\n\n      Object.keys(city).forEach(d => {\n        let data = [];\n        let incArr = [];\n        // let incArr1 = [];\n        let dayCN = ['2019年9月1日','2019年10月1日','2019年11月1日','2019年12月1日','2020年1月1日','2020年2月1日','2020年3月1日','2020年4月1日']\n        for (let i = 0; i < 8; i++) {\n          // let day = new Date(barometerDate.startTime + 2592e6 * i);\n          // let dayCN = this.date.resultformatCN(day)\n\n          let day = new Date(this.date.resultformatEN(dayCN[i]))\n          // console.log(day)\n          let dayData = city[d]['$' + dayCN[i]]\n          // console.log(city[d])\n          let inc = dayData ? this.utils.parseToInt(dayData[0]['AQI']) : 0;\n          let inc1 = dayData ? this.utils.parseToInt(dayData[0]['排名'])/5 : 0;\n          let inc2 = dayData ? dayData[0]['AQI'] : 0;\n          let change = inc;\n          let change1 = inc1\n          let change2 = inc2\n          incArr.push(inc)\n          // incArr1.push(inc1)\n          data.push({\n            day,\n            inc,\n            inc1,\n            inc2,\n            change,\n            change1,\n            change2\n          })\n        }\n        d.slice(1) !== '0' && cityList.push(d.slice(1))\n        d.slice(1) !== '0' && mapData.push({\n          data,\n          city: d.slice(1),\n          max: d3.max(incArr)\n        });\n      })\n// console.log(data)\n      //边距\n      const margin = ({\n        top: 30,\n        right: 20,\n        bottom: 180,\n        left: 30\n      })\n\n      //矩形边长\n      const rectHeight = 50;//大矩形一个单位长\n      const padding = 20;//内置矩形边长\n      const totalDays = barometerDate.totalTimes//总共的天数\n      const width = rectHeight * totalDays;//大矩形长\n      const height = (rectHeight + padding) * mapData.length;\n\n      const color1 = 'rgb(17,198,11)';//0-50    绿\n      const color2 = 'rgb(231,203,101)';//51-100     黄\n      const color3 = 'rgb(238,148,40)';//101-150    橙\n      const color4 = 'rgb(232,83,57)'; //151-200    红\n      const color5 = 'rgb(107,46,206)'; //201--300      紫\n      const color = 'rgb(108,33,4)';//300---              褐\n\n      //规模，标签\n      const x = d3.scaleBand()\n        .domain(xLabel)\n        .range([margin.left, width - margin.right])\n        .paddingInner(0.1)\n        .paddingOuter(0.2)\n\n      const y = d3.scaleBand()\n        .domain(mapData.map(d => d.city))\n        .range([margin.top, height - margin.bottom])\n        .paddingInner(0.2)\n\n      let zLabel = [2019.9, 2019.10, 2019.11, 2019.12, 2020.1, 2020.2, 2020.3, 2020.4]\n      const z = d3.scaleBand()\n        .domain(zLabel)\n        .range([margin.left, width - margin.right + 250])\n        .paddingInner(0.1)\n        .paddingOuter(0.2)\n\n      //标刻线\n      const r = d3.scaleLinear()\n        .domain([1, d3.max(mapData.map(d => d.max))])\n        .rangeRound([5 * 5, Math.pow(x.bandwidth(), 2)])\n\n      //添加画布\n      d3.select('#rainsheet').select('*').remove()\n      const svg = d3.select('#rainsheet')\n        .append('svg')\n        .attr(\"width\", document.getElementById('rainsheet').clientWidth)\n        .attr(\"height\", document.getElementById('rainsheet').clientHeight)\n        .attr(\"viewBox\", [0, 0, document.getElementById('rainsheet').clientWidth + margin.left + margin.right, document.getElementById('rainsheet').clientHeight + margin.top + margin.bottom])\n\n      svg.append('g')\n        .attr(\"transform\", `translate(${margin.left},0)`)\n        .call(d3.axisLeft(y)\n          .tickValues(mapData.map(d => d.city))\n          .tickSize(0))\n        .call(g => g.select(\".domain\").remove())\n        .call(g => g.selectAll(\"text\").style(\"font-size\", \"14\").style(\"font-weight\", 'bold'))\n\n      //标签时间轴\n      svg.append('g')\n        .attr(\"transform\", `translate(0,${margin.top})`)\n        .call(d3.axisTop(z).tickSize(5))\n        // .call(g => g.select(\".domain\").remove())\n        .call(g => g.selectAll(\"text\").style(\"font-size\", \"14\"))\n\n      let prov = svg.append('g')\n        .selectAll('g')\n        .data(mapData)\n        .join('g')\n        .attr('class', 'prov')\n\n      prov.each(function (d, i) {\n        d3.select(this)\n          .append('g')\n          .selectAll('rect')\n          .data(d => d.data)\n          .join('rect')\n          .attr('width', x.bandwidth())\n          .attr('height', x.bandwidth())\n          .attr('x', (t, n) => x(xLabel[n]) + 40 * n)\n          .attr('y', y(cityList[i]))\n          .attr('fill', '#eee')\n          .attr(\"rx\", 20)\n          .attr(\"ry\", 20)\n\n        //上层\n        d3.select(this)\n          .append('g')\n          .selectAll('rect')\n          .data(d => {\n            return d.data\n          })\n          .join('rect')\n          .attr('width', t => {\n            return t.inc1 === 0 ? 0 : Math.sqrt(r(t.inc1))\n          })\n          .attr('height', t => {\n            return t.inc1 === 0 ? 0 : Math.sqrt(r(t.inc1))\n          })\n          .attr('x', (t, n) => {\n            // console.log(t)\n            return x(xLabel[n]) + 40 * n})\n          .attr('y', y(cityList[i]))\n          .attr('fill', t => t.change <= 50 ? color1 : (t.change > 50 && t.change <= 100 ? color2 : (t.change > 100 && t.change <= 150 ? color3 :\n            (t.change > 150 && t.change <= 200 ? color4 : (t.change > 200 && t.change <= 300 ? color5 : color)))))\n          .attr(\"transform\", t => {\n            let innerR = Math.sqrt(r(t.inc1))\n            let outerR = x.bandwidth()\n            return t.inc1 === 0 ? '' : `translate(${(outerR - innerR) / 2},${(outerR - innerR) / 2})`\n          })\n          .attr(\"rx\", 15)\n          .attr(\"ry\", 15)\n          .on('click',(e)=>{\n            // console.log(e.day.getFullYear()+'年' +(e.day.getMonth() + 1)+ '月')\n            // console.log(e)\n            monthdraw(e.day.getFullYear()+'年' +(e.day.getMonth() + 1)+ '月')\n          })\n        d3.select(this)\n          .append('g')\n          .selectAll('text')\n          .data(d => d.data)\n          .join('text')\n          .attr('x', (t, n) => x(xLabel[n]) + 40 * n)\n          .attr('y', y(cityList[i]) + 10)\n          .attr('dx', x.bandwidth() / 2)\n          .attr('dy', y.bandwidth())\n          .text(t => t.inc2)\n          .attr('text-anchor', 'middle')\n          .style(\"font-size\", \"15\")\n\n      })\n    })\n  }\n\n}\nfunction monthdraw(time){\n  // console.log(time);\n  d3.csv('static/json/rainsheet/'+ time +'.csv').then(data => {\n    // console.log(\"数据:\")\n    console.log(data)\n    let allHieData = d3.nest().key(t => t[\"类型\"]).map(data);\n    // console.log(\"数据：\")\n    // console.log(allHieData)\n    // console.log(allHieData[\"$1\"])\n    let city = d3.nest().key(t => t[\"城市名\"]).key(t => t[\"日期\"]).map(allHieData[\"$1\"]);\n    // console.log(\"城市名:\")\n    // console.log(city)\n    const rainSheet = new rainsheet()\n    //晴雨表中间数据\n    //画图数据，长度等于省级的数量\n    let barometerDate = {};\n    let mapData = [];//数据\n    let xLabel = [];//标签\n    let cityList = []; //地区省 清单\n    barometerDate = rainSheet.date.getDays(data); //晴雨表数据\n    // console.log(barometerDate)\n\n\n    for (let i = 0; i < barometerDate.totalTimes; i++) {\n      let day = new Date(barometerDate.startTime + 864e5 * i);\n      xLabel.push(rainSheet.date.formatPoint(day))\n    }\n    // console.log(xLabel)\n\n    Object.keys(city).forEach(d => {\n      let data = [];\n      // let preInc = 0;\n      let incArr = [];\n      // let incArr1 = []\n      for (let i = 0; i < barometerDate.totalTimes; i++) {\n\n        let day = new Date(barometerDate.startTime + 864e5 * i);\n        let dayCN = rainSheet.date.formatCN(day)\n        let dayData = city[d]['$' + dayCN]\n        let inc = dayData ? rainSheet.utils.parseToInt(dayData[0]['AQI']) : 0;\n        let inc1 = dayData ? rainSheet.utils.parseToInt(dayData[0]['排名'])/5 : 0;\n        let inc2 = dayData ? dayData[0]['AQI'] : 0;\n        let change = inc;\n        let change1 = inc1\n        let change2 = inc2\n        incArr.push(inc)\n        // preInc = inc\n        data.push({\n          day,\n          inc,\n          inc1,\n          inc2,\n          change,\n          change1,\n          change2\n        })\n      }\n      d.slice(1) !== '0' && cityList.push(d.slice(1))\n      d.slice(1) !== '0' && mapData.push({\n        data,\n        city: d.slice(1),\n        max: d3.max(incArr)\n      });\n      // console.log(d.slice(1))\n      // console.log(d3.max(incArr))\n    })\n    //边距\n    const margin = ({\n      top: 40,\n      right: 0,\n      bottom: 0,\n      left: 15\n    })\n\n    //矩形边长\n    const rectHeight = 22;//大矩形一个单位长\n    const padding = 14;//内置矩形边长\n    const totalDays = barometerDate.totalTimes//总共的天数\n    const width = rectHeight * totalDays;//大矩形长\n    const height = (rectHeight + padding) * mapData.length;\n\n    const color1 = 'rgb(17,198,11)';//0-50    绿\n    const color2 = 'rgb(231,203,101)';//51-100     黄\n    const color3 = 'rgb(238,148,40)';//101-150    橙\n    const color4 = 'rgb(232,83,57)'; //151-200    红\n    const color5 = 'rgb(107,46,206)'; //201--300      紫\n    const color = 'rgb(108,33,4)';//300---              褐\n\n    //规模，标签\n    const x = d3.scaleBand()\n      .domain(xLabel)\n      .range([margin.left, width - margin.right])\n      .paddingInner(0.1)\n      .paddingOuter(0.2)\n\n    const y = d3.scaleBand()\n      .domain(mapData.map(d => d.city))\n      .range([margin.top, height - margin.bottom])\n      .paddingInner(0.2)\n\n    //标刻线\n    const r = d3.scaleLinear()\n      .domain([1, d3.max(mapData.map(d => d.max))])\n      .rangeRound([5 * 5, Math.pow(x.bandwidth(), 2)])\n\n    //添加画布\n    d3.select('#rainsheet').select('*').remove()\n    const svg = d3.select('#rainsheet')\n      .append('svg')\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"viewBox\", [0, 0, width + margin.left + margin.right, height + margin.top + margin.bottom])\n\n    svg.append('g')\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .call(d3.axisLeft(y)\n        .tickValues(mapData.map(d => d.city))\n        .tickSize(0))\n      .call(g => g.select(\".domain\").remove())\n      .call(g => g.selectAll(\"text\").style(\"font-size\", \"14\").style(\"font-weight\", 'bold'))\n\n    svg.append('g')\n      .attr(\"transform\", `translate(0,${margin.top})`)\n      .call(d3.axisTop(x).tickSize(10))\n      .call(g => g.select(\".domain\").remove())\n      .call(g => g.selectAll(\"text\").style(\"font-size\", \"14\"))\n\n    let prov = svg.append('g')\n      .selectAll('g')\n      .data(mapData)\n      .join('g')\n      .attr('class', 'prov')\n\n    prov.each(function (d, i) {\n      d3.select(this)\n        .append('g')\n        .selectAll('rect')\n        .data(d => d.data)\n        .join('rect')\n        .attr('width', x.bandwidth())\n        .attr('height', x.bandwidth())\n        .attr('x', (t, n) => x(xLabel[n]))\n        .attr('y', y(cityList[i]))\n        .attr('fill', '#eee')\n        .attr(\"rx\", 20)\n        .attr(\"ry\", 20)\n\n      //上层\n      d3.select(this)\n        .append('g')\n        .selectAll('rect')\n        .data(d => d.data)\n        .join('rect')\n        .attr('width', t => {\n          return t.inc1 === 0 ? 0 : Math.sqrt(r(t.inc1))\n        })\n        .attr('height', t => {\n          return t.inc1 === 0 ? 0 : Math.sqrt(r(t.inc1))\n        })\n        .attr('x', (t, n) => x(xLabel[n]))\n        .attr('y', y(cityList[i]))\n        .attr('fill', t => t.change <= 50 ? color1 : (t.change > 50 && t.change <= 100 ? color2 : (t.change > 100 && t.change <= 150 ? color3 :\n          (t.change > 150 && t.change <= 200 ? color4 : (t.change > 200 && t.change <= 300 ? color5 : color)))))\n        .attr(\"transform\", t => {\n          let innerR = Math.sqrt(r(t.inc))\n          let outerR = x.bandwidth()\n          return t.inc1 === 0 ? '' : `translate(${(outerR - innerR) / 2},${(outerR - innerR) / 2})`\n        })\n        .attr(\"rx\", 15)\n        .attr(\"ry\", 15)\n        .on('click',()=>{\n          rainSheet.initdarw()\n        })\n\n      d3.select(this)\n        .append('g')\n        .selectAll('text')\n        .data(d => d.data)\n        .join('text')\n        .attr('x', (t, n) => x(xLabel[n]))\n        .attr('y', y(cityList[i]))\n        .attr('dx', x.bandwidth() / 2)\n        .attr('dy', y.bandwidth())\n        .text(t => t.inc2)\n        .attr('text-anchor', 'middle')\n        .style(\"font-size\", \"10\")\n\n    })\n  })\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/JS/rainsheet.js\n// module id = null\n// module chunks = ","<template xmlns=\"http://www.w3.org/1999/html\">\n  <div id=\"app\">\n    <div style=\"text-align:center;font-size: 40px;font-family: '华文仿宋',serif\">城市气象数字沙盘可视化平台</div>\n    <div class=\"container-fluid row\" style=\"height: 94.5%;margin: 0\">\n      <div class=\"col-md-3\" style=\"height: 100%;\">\n        <div id=\"travelGuide\" class=\"col-md-12 whiteMargin\" style=\"height: 25%;\">\n          <div class=\"col-md-6\" style=\"float: left;margin-top: 2%;padding: 0 \">\n            <div class=\"col-md-12\" style=\"height: 25%;padding: 0\">\n              <div class=\"col-md-4\" style=\"height: 80%;float: left;\">\n                <img src=\"static/svg/日期.svg\" style=\"height: 100%\">\n                <div style=\"width: 100%;font-size: 100%;text-align: center\">时间</div>\n              </div>\n              <div id=\"date\" class=\"col-md-6 suggest\" style=\"font-size: 120%\">\n                2019年12月1日\n              </div>\n            </div>\n            <div class=\"col-md-12\" style=\"height: 25%;margin-top: 6%;padding: 0\">\n              <div class=\"col-md-4\" style=\"height: 80%;float: left\">\n                <img src=\"static/svg/气温.svg\" style=\"height: 90%;padding-left: 20%\">\n                <div style=\"width: 100%;font-size: 100%;text-align: center\">气温</div>\n              </div>\n              <div id=\"temprature\" class=\"col-md-6 suggest\" style=\"font-size: 150%;\">12.5℃\n              </div>\n            </div>\n            <div class=\"col-md-12\" style=\"height: 25%;margin-top: 6%;padding: 0\">\n              <div class=\"col-md-4\" style=\"height: 80%;float: left;\">\n                <img src=\"static/svg/湿度.svg\" style=\"height: 100%\">\n                <div style=\"width: 100%;font-size: 100%;text-align: center;\">湿度</div>\n              </div>\n              <div id=\"humid\" class=\"col-md-6 suggest\" style=\"font-size: 150%;padding-left: 0\">83</div>\n            </div>\n          </div>\n          <div class=\"col-md-6\" style=\"float: left;margin-top: 2%;padding: 0\">\n            <div class=\"col-md-12\" style=\"height: 25%;padding: 0\">\n              <div class=\"col-md-6\" style=\"height: 80%;float: left\">\n                <img src=\"static/svg/风速.svg\" style=\"height: 100%;\">\n                <div style=\"width: 70%;font-size: 100%;text-align: center\">风速</div>\n              </div>\n              <div id=\"speed\" class=\"col-md-6 suggest\" style=\"font-size: 150%;padding-left: 0\">12.3</div>\n            </div>\n            <div class=\"col-md-12\" style=\"height: 25%;margin-top: 6%;padding: 0\">\n              <div class=\"col-md-6\" style=\"height: 80%;float: left\">\n                <img src=\"static/svg/舒适.svg\" style=\"height: 100%\">\n                <div style=\"width: 80%;font-size: 100%;text-align: left;white-space: nowrap\">人体舒适度</div>\n              </div>\n              <div id=\"comfortable\" class=\"col-md-6 suggest\" style=\"font-size: 150%;padding-left: 0\">65.6</div>\n            </div>\n            <div class=\"col-md-12\" style=\"height: 25%;margin-top: 6%;padding: 0\">\n              <div class=\"col-md-6\" style=\"height: 80%;float: left\">\n                <img src=\"static/svg/温湿度.svg\" style=\"height: 100%\">\n                <div style=\"width: 70%;font-size: 100%;text-align: center;white-space: nowrap\">温湿指数</div>\n              </div>\n              <div id=\"temperaturehumid\" class=\"col-md-6 suggest\" style=\"font-size: 100%;padding-left: 0\">24.9</div>\n            </div>\n          </div>\n        </div>\n        <div id=\"rainDown\" class=\"col-md-12 whiteMargin\" style=\"height: 46%\"></div>\n        <div id=\"worldCloud\" class=\"col-md-12 whiteMargin\" style=\"height: 25%\"></div>\n      </div>\n      <div class=\"col-md-5\" style=\"height: 100%;padding-left: 0\">\n        <div id=\"map\" class=\"col-md-12 whiteMargin\" style=\"height: 58%;margin-bottom: 1%;\"></div>\n        <iframe id=\"map1\" src=\"static/file/index.html\" class=\"col-md-12 whiteMargin\" style=\"height: 58%;margin-bottom: 1%;display: none\"></iframe>\n        <ul class=\"typhoon-legend\" style=\"bottom: 41.5%;left: 94%;\">\n          <li><img src=\"static/legend.png\"></li>\n        </ul>\n        <button class=\"btn btn-success\" style=\"position: absolute;left: 2%;top: 55%;background-color: gray\" v-on:click='buttonchange'>切换\n        </button>\n        <div id=\"AQI\" class=\"col-md-12 whiteMargin\" style=\"height: 38%;margin-top: 1.3%\"></div>\n      </div>\n      <div class=\"col-md-4\" style=\"height: 100%;padding-left: 0\">\n        <select id=\"pid\" style=\";position: absolute;width: 20%;z-index: 100;left: 79%;top: 2%\">\n          <option value=\"PM2.5\">PM2.5</option>\n          <option value=\"PM10\">PM10</option>\n          <option value=\"SO2\">SO2</option>\n          <option value=\"NO2\">NO2</option>\n          <option value=\"CO\">CO</option>\n          <option value=\"O3\">O3</option>\n        </select>\n        <div id=\"heatmap\" class=\"col-md-12 whiteMargin\" style=\"height: 25%;margin-bottom: 1.5%\"></div>\n        <div id=\"moreDimention\" class=\"col-md-12 whiteMargin\" style=\"height: 32.5%;margin-bottom: 1.5%\"></div>\n        <div class=\"col-md-12 whiteMargin\" style=\"height: 40%;\">\n          <div id=\"rainsheet\" style=\"height: 80%\"></div>\n          <div style=\"height: 10%\"></div>\n        </div>\n        <ul class=\"typhoon-legend\" style=\"width: 80%\">\n          <!--          <li style=\"padding-bottom: 5px; font-weight: bold;\">晴雨表图例</li>-->\n          <li style=\"float: left;text-align: right;white-space: nowrap;\"><span class=\"color-circle\" style=\"background-color: rgb(17,198,11);\"></span>优\n          </li>\n          <li style=\"float: left;text-align: right;white-space: nowrap;\"><span class=\"color-circle\" style=\"background-color: rgb(231,203,101);\"></span>良\n          </li>\n          <li style=\"float: left;text-align: right;white-space: nowrap;\"><span class=\"color-circle\" style=\"background-color: rgb(238,148,40);\"></span>轻度污染\n          </li>\n          <li style=\"float: left;text-align: right;white-space: nowrap;\"><span class=\"color-circle\" style=\"background-color: rgb(232,83,57);\"></span>中度污染\n          </li>\n          <li style=\"float: left;text-align: right;white-space: nowrap;\"><span class=\"color-circle\" style=\"background-color:rgb(107,46,206);\"></span>重度污染\n          </li>\n          <li style=\"float: left;text-align: right;white-space: nowrap;\"><span class=\"color-circle\" style=\"background-color:  rgb(108,33,4);\"></span>严重污染\n          </li>\n          <li style=\"float: left;text-align: right;white-space: nowrap;\"><span class=\"color-circle\" style=\"background-color:  rgb(255,255,255);\"></span>填充度\n            空气质量数值越大半径越大\n          </li>\n          <!--         <br>-->\n          <!--          <li style=\"white-space: nowrap;\">填充度 空气质量数值越大半径越大</li>-->\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport maps from '../static/JS/Maps'\nimport suggestmode from \"../static/JS/suggestmode\";\nimport raindown from \"../static/JS/raindown\";\nimport wordcloud from \"../static/JS/wordcloud\";\nimport cityaqi from \"../static/JS/cityaqi\";\nimport moredimention from \"../static/JS/moredimention\";\nimport heatcalendar from \"../static/JS/heatcalendar\";\nimport rainsheet from \"../static/JS/rainsheet\";\n\nexport default {\n  name: 'App',\n  mounted() {\n    const Maps = new maps()\n    const word = new wordcloud()\n    const rain = new raindown()\n    const suggestions = new suggestmode()\n    const cityAQI = new cityaqi()\n    const heatMap = new heatcalendar()\n    const moreDimention = new moredimention()\n    const rainSheet = new rainsheet()\n    Maps.initMaps(word, rain, cityAQI, moreDimention, heatMap)\n\n    suggestions.initMode()\n    // rainDown()\n    cityAQI.initcityaqi()\n    rain.initrainDown()\n    rain.rainEvent(Maps, suggestions)\n    word.initcloud()\n    heatMap.initheatmap()\n    heatMap.heatmapevent(rain)\n    rainSheet.initdarw()\n    // citysAQI()\n    // calender()\n    // Draw1()\n    // moredimention()\n    moreDimention.initdimention()\n    moreDimention.dimentionevent(heatMap)\n    // Maps.aqiEvent(cityAQI, rain,moreDimention,heatMap)\n  },\n  methods:{\n    buttonchange(){\n      let map = document.getElementById('map')\n      let sca = document.getElementById('map1')\n      if (map.style.display === ''){\n        map.style.display ='none'\n        sca.style.display = ''\n      }\n      else {\n        map.style.display =''\n        sca.style.display = 'none'\n      }\n    }\n  }\n}\n\n</script>\n\n<style>\n#app {\n  /*font-family: 'Avenir', Helvetica, Arial, sans-serif;*/\n  /*-webkit-font-smoothing: antialiased;*/\n  /*-moz-osx-font-smoothing: grayscale;*/\n  /*text-align: center;*/\n  /*color: #2c3e50;*/\n  /*margin-top: 60px;*/\n  background-color: #eeeeef;\n}\n\n.whiteMargin {\n  margin: 1.5% 1.5% 3% 1.5%;\n  background-color: rgba(255, 255, 255, 0.6);\n  border-radius: 10px;\n  padding: 0;\n}\n\n.suggest {\n  height: 100%;\n  font-size: 150%;\n  float: left;\n  /*justify-content: center,*/\n  /*align-items: center;*/\n  white-space: nowrap;\n  /*text-align:center;*/\n  /*align-items: center;*/\n  /*-webkit-box-align: center;*/\n  /*-webkit-box-pack: center;*/\n  /*vertical-align: middle;*/\n  display: flex;\n  justify-content: left; /*实现水平居中*/\n  align-items: center; /*实现垂直居中*/\n  /*width:100%;*/\n  padding: 0;\n}\n\n.typhoon-legend {\n  position: absolute;\n  bottom: 0.3%;\n  left: 10%;\n  z-index: 99999;\n  background-color: rgba(255, 255, 255, 0.65);\n  padding: 0;\n  list-style: none;\n  margin: 0;\n  font-size: 12px;\n  border-radius: 5px;\n}\n\n.color-circle {\n  display: inline-block;\n  width: 10px;\n  height: 10px;\n  border-radius: 100%;\n  margin-right: 5px;\n  color: black;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticStyle:{\"text-align\":\"center\",\"font-size\":\"40px\",\"font-family\":\"'华文仿宋',serif\"}},[_vm._v(\"城市气象数字沙盘可视化平台\")]),_vm._v(\" \"),_c('div',{staticClass:\"container-fluid row\",staticStyle:{\"height\":\"94.5%\",\"margin\":\"0\"}},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"col-md-5\",staticStyle:{\"height\":\"100%\",\"padding-left\":\"0\"}},[_c('div',{staticClass:\"col-md-12 whiteMargin\",staticStyle:{\"height\":\"58%\",\"margin-bottom\":\"1%\"},attrs:{\"id\":\"map\"}}),_vm._v(\" \"),_c('iframe',{staticClass:\"col-md-12 whiteMargin\",staticStyle:{\"height\":\"58%\",\"margin-bottom\":\"1%\",\"display\":\"none\"},attrs:{\"id\":\"map1\",\"src\":\"static/file/index.html\"}}),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-success\",staticStyle:{\"position\":\"absolute\",\"left\":\"2%\",\"top\":\"55%\",\"background-color\":\"gray\"},on:{\"click\":_vm.buttonchange}},[_vm._v(\"切换\\n      \")]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 whiteMargin\",staticStyle:{\"height\":\"38%\",\"margin-top\":\"1.3%\"},attrs:{\"id\":\"AQI\"}})]),_vm._v(\" \"),_vm._m(2)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-3\",staticStyle:{\"height\":\"100%\"}},[_c('div',{staticClass:\"col-md-12 whiteMargin\",staticStyle:{\"height\":\"25%\"},attrs:{\"id\":\"travelGuide\"}},[_c('div',{staticClass:\"col-md-6\",staticStyle:{\"float\":\"left\",\"margin-top\":\"2%\",\"padding\":\"0\"}},[_c('div',{staticClass:\"col-md-12\",staticStyle:{\"height\":\"25%\",\"padding\":\"0\"}},[_c('div',{staticClass:\"col-md-4\",staticStyle:{\"height\":\"80%\",\"float\":\"left\"}},[_c('img',{staticStyle:{\"height\":\"100%\"},attrs:{\"src\":\"static/svg/日期.svg\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"width\":\"100%\",\"font-size\":\"100%\",\"text-align\":\"center\"}},[_vm._v(\"时间\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 suggest\",staticStyle:{\"font-size\":\"120%\"},attrs:{\"id\":\"date\"}},[_vm._v(\"\\n              2019年12月1日\\n            \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12\",staticStyle:{\"height\":\"25%\",\"margin-top\":\"6%\",\"padding\":\"0\"}},[_c('div',{staticClass:\"col-md-4\",staticStyle:{\"height\":\"80%\",\"float\":\"left\"}},[_c('img',{staticStyle:{\"height\":\"90%\",\"padding-left\":\"20%\"},attrs:{\"src\":\"static/svg/气温.svg\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"width\":\"100%\",\"font-size\":\"100%\",\"text-align\":\"center\"}},[_vm._v(\"气温\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 suggest\",staticStyle:{\"font-size\":\"150%\"},attrs:{\"id\":\"temprature\"}},[_vm._v(\"12.5℃\\n            \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12\",staticStyle:{\"height\":\"25%\",\"margin-top\":\"6%\",\"padding\":\"0\"}},[_c('div',{staticClass:\"col-md-4\",staticStyle:{\"height\":\"80%\",\"float\":\"left\"}},[_c('img',{staticStyle:{\"height\":\"100%\"},attrs:{\"src\":\"static/svg/湿度.svg\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"width\":\"100%\",\"font-size\":\"100%\",\"text-align\":\"center\"}},[_vm._v(\"湿度\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 suggest\",staticStyle:{\"font-size\":\"150%\",\"padding-left\":\"0\"},attrs:{\"id\":\"humid\"}},[_vm._v(\"83\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\",staticStyle:{\"float\":\"left\",\"margin-top\":\"2%\",\"padding\":\"0\"}},[_c('div',{staticClass:\"col-md-12\",staticStyle:{\"height\":\"25%\",\"padding\":\"0\"}},[_c('div',{staticClass:\"col-md-6\",staticStyle:{\"height\":\"80%\",\"float\":\"left\"}},[_c('img',{staticStyle:{\"height\":\"100%\"},attrs:{\"src\":\"static/svg/风速.svg\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"width\":\"70%\",\"font-size\":\"100%\",\"text-align\":\"center\"}},[_vm._v(\"风速\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 suggest\",staticStyle:{\"font-size\":\"150%\",\"padding-left\":\"0\"},attrs:{\"id\":\"speed\"}},[_vm._v(\"12.3\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12\",staticStyle:{\"height\":\"25%\",\"margin-top\":\"6%\",\"padding\":\"0\"}},[_c('div',{staticClass:\"col-md-6\",staticStyle:{\"height\":\"80%\",\"float\":\"left\"}},[_c('img',{staticStyle:{\"height\":\"100%\"},attrs:{\"src\":\"static/svg/舒适.svg\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"width\":\"80%\",\"font-size\":\"100%\",\"text-align\":\"left\",\"white-space\":\"nowrap\"}},[_vm._v(\"人体舒适度\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 suggest\",staticStyle:{\"font-size\":\"150%\",\"padding-left\":\"0\"},attrs:{\"id\":\"comfortable\"}},[_vm._v(\"65.6\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12\",staticStyle:{\"height\":\"25%\",\"margin-top\":\"6%\",\"padding\":\"0\"}},[_c('div',{staticClass:\"col-md-6\",staticStyle:{\"height\":\"80%\",\"float\":\"left\"}},[_c('img',{staticStyle:{\"height\":\"100%\"},attrs:{\"src\":\"static/svg/温湿度.svg\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"width\":\"70%\",\"font-size\":\"100%\",\"text-align\":\"center\",\"white-space\":\"nowrap\"}},[_vm._v(\"温湿指数\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 suggest\",staticStyle:{\"font-size\":\"100%\",\"padding-left\":\"0\"},attrs:{\"id\":\"temperaturehumid\"}},[_vm._v(\"24.9\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 whiteMargin\",staticStyle:{\"height\":\"46%\"},attrs:{\"id\":\"rainDown\"}}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 whiteMargin\",staticStyle:{\"height\":\"25%\"},attrs:{\"id\":\"worldCloud\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"typhoon-legend\",staticStyle:{\"bottom\":\"41.5%\",\"left\":\"94%\"}},[_c('li',[_c('img',{attrs:{\"src\":\"static/legend.png\"}})])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-4\",staticStyle:{\"height\":\"100%\",\"padding-left\":\"0\"}},[_c('select',{staticStyle:{\"position\":\"absolute\",\"width\":\"20%\",\"z-index\":\"100\",\"left\":\"79%\",\"top\":\"2%\"},attrs:{\"id\":\"pid\"}},[_c('option',{attrs:{\"value\":\"PM2.5\"}},[_vm._v(\"PM2.5\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"PM10\"}},[_vm._v(\"PM10\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"SO2\"}},[_vm._v(\"SO2\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"NO2\"}},[_vm._v(\"NO2\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"CO\"}},[_vm._v(\"CO\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"O3\"}},[_vm._v(\"O3\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 whiteMargin\",staticStyle:{\"height\":\"25%\",\"margin-bottom\":\"1.5%\"},attrs:{\"id\":\"heatmap\"}}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 whiteMargin\",staticStyle:{\"height\":\"32.5%\",\"margin-bottom\":\"1.5%\"},attrs:{\"id\":\"moreDimention\"}}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 whiteMargin\",staticStyle:{\"height\":\"40%\"}},[_c('div',{staticStyle:{\"height\":\"80%\"},attrs:{\"id\":\"rainsheet\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"height\":\"10%\"}})]),_vm._v(\" \"),_c('ul',{staticClass:\"typhoon-legend\",staticStyle:{\"width\":\"80%\"}},[_c('li',{staticStyle:{\"float\":\"left\",\"text-align\":\"right\",\"white-space\":\"nowrap\"}},[_c('span',{staticClass:\"color-circle\",staticStyle:{\"background-color\":\"rgb(17,198,11)\"}}),_vm._v(\"优\\n        \")]),_vm._v(\" \"),_c('li',{staticStyle:{\"float\":\"left\",\"text-align\":\"right\",\"white-space\":\"nowrap\"}},[_c('span',{staticClass:\"color-circle\",staticStyle:{\"background-color\":\"rgb(231,203,101)\"}}),_vm._v(\"良\\n        \")]),_vm._v(\" \"),_c('li',{staticStyle:{\"float\":\"left\",\"text-align\":\"right\",\"white-space\":\"nowrap\"}},[_c('span',{staticClass:\"color-circle\",staticStyle:{\"background-color\":\"rgb(238,148,40)\"}}),_vm._v(\"轻度污染\\n        \")]),_vm._v(\" \"),_c('li',{staticStyle:{\"float\":\"left\",\"text-align\":\"right\",\"white-space\":\"nowrap\"}},[_c('span',{staticClass:\"color-circle\",staticStyle:{\"background-color\":\"rgb(232,83,57)\"}}),_vm._v(\"中度污染\\n        \")]),_vm._v(\" \"),_c('li',{staticStyle:{\"float\":\"left\",\"text-align\":\"right\",\"white-space\":\"nowrap\"}},[_c('span',{staticClass:\"color-circle\",staticStyle:{\"background-color\":\"rgb(107,46,206)\"}}),_vm._v(\"重度污染\\n        \")]),_vm._v(\" \"),_c('li',{staticStyle:{\"float\":\"left\",\"text-align\":\"right\",\"white-space\":\"nowrap\"}},[_c('span',{staticClass:\"color-circle\",staticStyle:{\"background-color\":\"rgb(108,33,4)\"}}),_vm._v(\"严重污染\\n        \")]),_vm._v(\" \"),_c('li',{staticStyle:{\"float\":\"left\",\"text-align\":\"right\",\"white-space\":\"nowrap\"}},[_c('span',{staticClass:\"color-circle\",staticStyle:{\"background-color\":\"rgb(255,255,255)\"}}),_vm._v(\"填充度\\n          空气质量数值越大半径越大\\n        \")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2c592515\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2c592515\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2c592515\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport $ from 'jquery'\n// 引用bootstrap\nimport 'bootstrap/dist/js/bootstrap'\nimport 'bootstrap/dist/css/bootstrap.css'\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","import axios from \"axios\";\nimport {time} from \"echarts/lib/export\";\n\nconst echarts = require('echarts')\nexport default class raindown {\n  constructor() {\n    this.option = {\n      title: {\n        text: 'AQI降雨量关系图',\n        left: '35%',\n        align: 'right'\n      },\n      grid: {\n        // bottom: 80\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'cross',\n          animation: false,\n          label: {\n            backgroundColor: '#505765'\n          }\n        }\n      },\n      legend: {\n        data: ['AQI', '降雨量'],\n        left: 10\n      },\n      dataZoom: [\n        {\n          show: true,\n          realtime: true,\n          start: 65,\n          end: 85\n        },\n        {\n          type: 'inside',\n          realtime: true,\n          start: 65,\n          end: 85\n        }\n      ],\n      xAxis: [\n        {\n          type: 'category',\n          boundaryGap: false,\n          axisLine: {onZero: false},\n          data: null\n        }\n      ],\n      yAxis: [\n        {\n          name: 'AQI指数',\n          type: 'value',\n          // max: 500\n        },\n        {\n          name: '降雨量(mm)',\n          nameLocation: 'start',\n          // max: 5,\n          type: 'value',\n          inverse: true\n        }\n      ],\n      series: [\n        {\n          name: 'AQI',\n          type: 'line',\n          areaStyle: {},\n          lineStyle: {\n            width: 1\n          },\n          emphasis: {\n            focus: 'series'\n          },\n          markArea: {\n            silent: true,\n            itemStyle: {\n              opacity: 0.3\n            },\n            data: []\n          },\n          data: null\n        },\n        {\n          name: '降雨量',\n          type: 'line',\n          yAxisIndex: 1,\n          areaStyle: {},\n          lineStyle: {\n            width: 1\n          },\n          emphasis: {\n            focus: 'series'\n          },\n          markArea: {\n            silent: true,\n            itemStyle: {\n              opacity: 0.3\n            },\n            data: []\n          },\n          data: null\n        }\n      ]\n    };\n    this.Mycharts = echarts.init(document.getElementById('rainDown'))\n    return this;\n  }\n\n  async initrainDown(cityname = '江西省') {\n    let data = await $.getJSON('static/json/rainAQI/' + cityname + '.json')\n    let raindata = data.map(a => a.Rain)\n    let date = data.map(a => a.date)\n    let AQIdata = data.map(a => a.AQI)\n    this.option.xAxis[0].data = date\n    this.option.series[0].data = AQIdata\n    this.option.series[1].data = raindata\n    this.option.title.text = cityname + 'AQI降雨量关系图'\n    this.Mycharts.setOption(this.option, true)\n  }\n\n  async updateRain(cityname = '赣州市') {\n    let data = await $.getJSON('static/json/rainAQI/' + cityname + '.json')\n    let raindata = data.map(a => a.Rain)\n    let date = data.map(a => a.date)\n    let AQIdata = data.map(a => a.AQI)\n    // console.log(AQIdata)\n    this.option.xAxis[0].data = date\n    this.option.series[0].data = AQIdata\n    this.option.series[1].data = raindata\n    this.option.title.text = cityname + 'AQI降雨量关系图'\n    this.Mycharts.setOption(this.option, true)\n  }\n\n  rainEvent(maps, suggest) {\n    this.Mycharts.on('click', (e) => {\n      suggest.initMode(e.name).then(r => r)\n      // console.log(e)\n    })\n    this.Mycharts.on('dblclick', (e) => {\n      console.log(e)\n    })\n    this.Mycharts.on('datazoom', (e) => {\n      let timedata = this.option.xAxis[0].data\n      setTimeout(this.fillMaps, 800, maps, timedata, e)\n    })\n  }\n\n  fillMaps(maps, timedata, e) {\n    const starttime = timedata[Number.parseInt(e.start)];\n    const endtime = timedata[Number.parseInt(e.end)];\n    // console.log(starttime, endtime);\n    maps.updatefillMap(starttime, endtime)\n  }\n\n  async updaterainplace(cityname = '庐山') {\n    let data = await $.getJSON('static/json/rainAQI/' + cityname + '.json')\n    let dataCI = await $.getJSON('static/json/confortable/' + cityname + '.json')\n    // console.log(dataCI)\n\n    let raindata = data.map(a => a.Rain)\n    let dataCIHB = dataCI.map(a => a.CIHB)\n    // console.log(dataCIHB)\n    let date = data.map(a => a.date)\n    // let AQIdata = data.map(a => a.AQI)\n    // console.log(AQIdata)\n    let option = $.extend(true, {}, this.option);\n    option.xAxis.data = date\n    // this.option.series[0].data = AQIdata\n    option.series = [{\n      name: '人体舒适指数',\n      type: 'line',\n      yAxisIndex: 0,\n      areaStyle: {},\n      lineStyle: {\n        width: 1\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      markArea: {\n        silent: true,\n        itemStyle: {\n          opacity: 0.3\n        },\n        data: []\n      },\n      data: dataCIHB\n    }, {\n      name: '降雨量',\n      type: 'line',\n      yAxisIndex: 1,\n      areaStyle: {},\n      lineStyle: {\n        width: 1\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      markArea: {\n        silent: true,\n        itemStyle: {\n          opacity: 0.3\n        },\n        data: []\n      },\n      data: raindata\n    }]\n    option.title.text = cityname + '降雨量图'\n    option.title.left = '40%'\n    option.yAxis = [\n      {\n        name: '人体舒适指数',\n        type: 'value',\n        // max: 500\n      },\n      {\n        name: '降雨量(mm)',\n        nameLocation: 'start',\n        // max: 5,\n        type: 'value',\n        inverse: true\n      }\n    ],\n      option.legend = {\n        data: ['人体舒适指数', '降雨量'],\n        left: 10\n      }\n    // console.log(option)\n    this.Mycharts.setOption(option, true)\n  }\n\n  async updateelement(city, ele) {\n    let data = await $.getJSON('static/json/elementAir/' + city + '.json')\n    let dataAQI = await $.getJSON('static/json/rainAQI/' + city + '.json')\n    let date = data.map(a => a.date)\n    let eledata = data.map(a => a[ele])\n    let AQI = dataAQI.map(a => a.AQI)\n    console.log(eledata)\n    console.log(AQI)\n    let option = $.extend(true, {}, this.option);\n    option.xAxis.data = date\n    // this.option.series[0].data = AQIdata\n    option.series = [{\n      name: ele,\n      type: 'line',\n      yAxisIndex: 0,\n      areaStyle: {},\n      lineStyle: {\n        width: 1\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      markArea: {\n        silent: true,\n        itemStyle: {\n          opacity: 0.3\n        },\n        data: []\n      },\n      data: eledata\n    }, {\n      name: 'AQI',\n      type: 'line',\n      yAxisIndex: 1,\n      areaStyle: {},\n      lineStyle: {\n        width: 1\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      markArea: {\n        silent: true,\n        itemStyle: {\n          opacity: 0.3\n        },\n        data: []\n      },\n      data: AQI\n    }]\n    option.title.text = city + ele + '指数与AQI指数关系图'\n    option.title.left = '40%'\n    option.yAxis = [\n      {\n        name: ele,\n        type: 'value',\n        // max: 500\n      },\n      {\n        name: 'AQI',\n        nameLocation: 'start',\n        // max: 5,\n        type: 'value',\n        inverse: true\n      }\n    ]\n    option.legend = {\n      data: [ele, 'AQI'],\n      left: 10\n    }\n    // console.log(option)\n    this.Mycharts.setOption(option, true)\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/JS/raindown.js\n// module id = RIpQ\n// module chunks = 1","import Js2WordCloud from 'js2wordcloud'\nimport axios from \"axios\";\nimport {consoleLog} from \"echarts/lib/util/log\";\n\nexport default class wordcloud {\n  constructor() {\n    this.wc = new Js2WordCloud(document.getElementById('worldCloud'));\n    this.option = {\n      imageShape: 'static/img.png',\n      // fontSizeFactor: 30,\n      tooltip: {\n        show: true,\n        formatter: function (item) {\n          return item[0]\n        }\n      },\n      gridSize: 1,\n      maxFontSize: 30,\n      minFontSize: 1,\n      color: 'random-light',\n      backgroundColor: 'rgba(0,0,0,.0)',\n      list: [],\n      // max:1,\n    };\n    return this;\n  }\n\n  async initcloud() {\n    this.option.list = await createData('江西')\n    this.wc.setOption(this.option)\n    return this.wc\n  }\n\n  async updateclouds(base) {\n    // if (typeof (nullData()) === typeof (createData(base)))\n    // console.log(await createData(base))\n    this.option.list = await createData(base)\n    this.wc.setOption(this.option)\n  }\n}\n\nasync function createData(base) {\n  let objToList = (obj, code = 'code', value = 'value') => {\n    const keys = Object.keys(obj)\n    return keys.map(it => {\n      // console.log(it)\n      return [obj[it].name, obj[it].rank]\n      // return { [code]: it, [value]: obj[it] }\n    })\n  }\n  let data = await $.getJSON('static/json/wordcloud/' + base + '.json')\n  return objToList(data, 'name', 'rank')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/JS/wordcloud.js\n// module id = d6x3\n// module chunks = 1","import {Scene, PointLayer} from '@antv/l7';\nimport {GaodeMap} from '@antv/l7-maps';\n// import {Scene} from '@antv/l7';\nimport {ProvinceLayer} from '@antv/l7-district';\nimport {Mapbox} from '@antv/l7-maps';\nimport {Marker} from \"@antv/l7-component\";\n\nconst axios = require('axios')\n\n\nexport default class maps {\n  constructor() {\n    this.colors = ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'];\n    this.scene = new Scene({\n      id: 'map',\n      map: new GaodeMap({\n        center: [115.9, 27.40013],\n        pitch: 30,\n        style: 'blank',\n        zoom: 3,\n        minZoom: 3,\n        maxZoom: 10,\n        doubleClickZoom: false\n      }),\n      logoVisible: false\n    })\n    this.data = null\n    this.MarkerPinImg = {\n      green:\n        'https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*JhBbT4LvHpQAAAAAAAAAAAAAARQnAQ',\n      blue:\n        'https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*n6cXTb8R7iUAAAAAAAAAAAAAARQnAQ',\n    };\n    this.countryLayer = null;\n    return this\n  }\n\n  async initMaps(word, raindown, cityAQI, moredimention, headmap) {\n    this.data = await $.getJSON('static/json/city.json');\n    // this.scence = ;\n    // console.log(this.data)\n    this.scene.on('loaded', () => {\n      this.countryLayer = new ProvinceLayer(this.scene, {\n        data: this.data,\n        joinBy: ['adcode', 'code'],\n        adcode: ['360000'],\n        depth: 2,\n        label: {\n          field: 'NAME_CHN',\n          textAllowOverlap: false\n        },\n        fill: {\n          color: {\n            field: 'pop',\n            values: this.colors\n          }\n        },\n        popup: {\n          enable: true,\n          Html: props => {\n            return `<span>${props.NAME_CHN}:</span><span>${props.pop}</span>`;\n          }\n        }\n      });\n      // this.countryLayer.off('dblclick')\n      this.addMarkers(word, raindown)\n      this.scene.on('click', function (e) {\n        axios.get('https://restapi.amap.com/v3/geocode/regeo?output=json&location=' + e.lnglat.lng + ',' + e.lnglat.lat\n          + '&key=3e7a24eb63ccd0362f20ef75c17ab511&radius=1000&extensions=all')\n          .then(function (response) {\n            raindown.updateRain(response.data.regeocode.addressComponent.city).then(r => r)\n            cityAQI.initcityaqi(response.data.regeocode.addressComponent.city).then(r => r)\n          }).catch(function (error) {\n          console.log(error);\n        });\n      })\n      this.scene.on('dblclick', function (e) {\n        axios.get('https://restapi.amap.com/v3/geocode/regeo?output=json&location=' + e.lnglat.lng + ',' + e.lnglat.lat\n          + '&key=3e7a24eb63ccd0362f20ef75c17ab511&radius=1000&extensions=all')\n          .then(function (response) {\n            moredimention.initdimention(response.data.regeocode.addressComponent.city)\n            headmap.initheatmap(response.data.regeocode.addressComponent.city)\n          }).catch(function (error) {\n          console.log(error);\n        });\n      })\n    })\n\n  }\n\n  // aqiEvent(cityAQI, raindown, moredimention, headmap) {\n  //   let scene = this.scene\n  //   scene.on('click', function (e) {\n  //     axios.get('https://restapi.amap.com/v3/geocode/regeo?output=json&location=' + e.lnglat.lng + ',' + e.lnglat.lat\n  //       + '&key=3e7a24eb63ccd0362f20ef75c17ab511&radius=1000&extensions=all')\n  //       .then(function (response) {\n  //         raindown.updateRain(response.data.regeocode.addressComponent.city).then(r => console.log(r))\n  //         cityAQI.initcityaqi(response.data.regeocode.addressComponent.city).then(r => console.log(r))\n  //       }).catch(function (error) {\n  //       console.log(error);\n  //     });\n  //   })\n  //   scene.on('dblclick', function (e) {\n  //     axios.get('https://restapi.amap.com/v3/geocode/regeo?output=json&location=' + e.lnglat.lng + ',' + e.lnglat.lat\n  //       + '&key=3e7a24eb63ccd0362f20ef75c17ab511&radius=1000&extensions=all')\n  //       .then(function (response) {\n  //         moredimention.initdimention(response.data.regeocode.addressComponent.city)\n  //         headmap.initheatmap(response.data.regeocode.addressComponent.city)\n  //       }).catch(function (error) {\n  //       console.log(error);\n  //     });\n  //   })\n  // }\n\n  addMarkers(word, raindown) {\n    axios.get('static/json/Attraction.json')\n      .then((response) => {\n        let nodes = response.data\n        for (let i = 0; i < nodes.length; i++) {\n          const el = createMark(nodes[i].name, this.MarkerPinImg)\n          const marker = new Marker({\n            element: el,\n            extData: nodes[i].name\n          }).setLnglat({lng: nodes[i].lng, lat: nodes[i].lat});\n          this.scene.addMarker(marker);\n          marker.on('click', (e) => {\n            raindown.updaterainplace(e.data).then()\n            word.updateclouds(e.data).then()\n          })\n          marker.on('dblclick', (e) => {\n            var r = confirm(\"无设备原因,是否播放演示视频\");\n            if (r === true) {\n              window.open('VR11/mp4.html','_self');\n            } else {\n              window.open('VR11/VR.html', '_self');\n            }\n\n          })\n        }\n      });\n  };\n\n  updatefillMap(startTime, endTime) {\n    createtimeData(startTime, endTime).then((r) => {\n      // console.log(r)\n      this.countryLayer = new ProvinceLayer(this.scene, {\n        data: r,\n        joinBy: ['adcode', 'code'],\n        adcode: ['360000'],\n        depth: 2,\n        label: {\n          field: 'NAME_CHN',\n          textAllowOverlap: false\n        },\n        fill: {\n          color: {\n            field: 'pop',\n            values: this.colors\n          }\n        },\n        popup: {\n          enable: true,\n          Html: props => {\n            return `<span>${props.NAME_CHN}:</span><span>${props.pop}</span>`;\n          }\n        }\n      })\n      // this.countryLayer.updateData(r)\n      // console.log(this.countryLayer.updateData(r))\n    })\n  }\n\n}\n\nfunction createMark(title, MarkerPinImg) {\n  const el1 = document.createElement('div')\n  el1.className = 'markContent'\n  const el2 = document.createElement('div')\n  el2.style.display = \"flex\"\n  el2.style.alignItems = \"center\"\n  el2.style.height = \"32px\"\n  el2.style.padding = \"0.05em\"\n  el2.style.background = \"#28e0e0\"\n  el2.style.borderRadius = \"44px\"\n  const el4 = document.createElement('div')\n  el4.style.color = \"#fff\"\n  el4.style.fontSize = \"12px\"\n  el4.innerText = title\n  el2.appendChild(el4)\n  el1.appendChild(el2)\n  const el3 = document.createElement('div')\n  el3.style.display = \"flex\"\n  el3.style.justifyContent = \"center\"\n  const el5 = document.createElement('img')\n  el5.style.width = \"20px\"\n  el5.style.height = \"30px\"\n  el5.alt = \"marker\"\n  el5.src = MarkerPinImg.blue\n  el3.appendChild(el5)\n  el1.appendChild(el3)\n  return el1\n}\n\nasync function createtimeData(startTime, endTime) {\n  let cityshangrao = await $.getJSON('static/json/rain/上饶市.json')\n  let cityjiujiang = await $.getJSON('static/json/rain/九江市.json')\n  let citynanchang = await $.getJSON('static/json/rain/南昌市.json')\n  let cityjian = await $.getJSON('static/json/rain/吉安市.json')\n  let cityyichun = await $.getJSON('static/json/rain/宜春市.json')\n  let cityfuzhou = await $.getJSON('static/json/rain/抚州市.json')\n  let cityxinyu = await $.getJSON('static/json/rain/新余市.json')\n  let cityjingdezhen = await $.getJSON('static/json/rain/景德镇市.json')\n  let citypingxiang = await $.getJSON('static/json/rain/萍乡市.json')\n  let cityganzhou = await $.getJSON('static/json/rain/赣州市.json')\n  let cityyingtan = await $.getJSON('static/json/rain/鹰潭市.json')\n  let filldata = await $.getJSON('static/json/city.json')\n  // console.log(cityyichun)\n  for (let i in filldata) {\n    filldata[i].pop = 0\n  }\n  // const start = new Date(startTime.replace(/-/, \"/\"));\n  // const end = new Date(endTime.replace(/-/,'/'))\n  filldata[0].pop = calulate(startTime, endTime, citynanchang)\n  filldata[1].pop = calulate(startTime, endTime, cityjingdezhen)\n  filldata[2].pop = calulate(startTime, endTime, cityyingtan)\n  filldata[3].pop = calulate(startTime, endTime, cityxinyu)\n  filldata[4].pop = calulate(startTime, endTime, cityganzhou)\n  filldata[5].pop = calulate(startTime, endTime, cityjiujiang)\n  filldata[6].pop = calulate(startTime, endTime, cityfuzhou)\n  filldata[7].pop = calulate(startTime, endTime, cityshangrao)\n  filldata[8].pop = calulate(startTime, endTime, citypingxiang)\n  filldata[9].pop = calulate(startTime, endTime, cityjian)\n  filldata[10].pop = calulate(startTime, endTime, cityyichun)\n  // console.log(filldata)\n  return filldata\n}\n\nfunction calulate(startTime, endTime, data) {\n  let res = 0\n\n  const star = new Date(startTime);\n  const end = new Date(endTime)\n  // console.log(star)\n  for (let i in data) {\n    // console.log(i)\n    // if ()\n    let now = new Date(data[i].date)\n    if (star <= now && now <= end) {\n      // console.log(cityyichun[i].date,cityyichun[i].Rain)\n      res = accAdd(data[i].Rain, res)\n    }\n  }\n  // console.log(res)\n  return res\n}\n\nfunction accAdd(arg1, arg2) {\n  let r1, r2, m;\n  try {\n    r1 = arg1.toString().split(\".\")[1].length\n  } catch (e) {\n    r1 = 0\n  }\n  try {\n    r2 = arg2.toString().split(\".\")[1].length\n  } catch (e) {\n    r2 = 0\n  }\n  m = Math.pow(10, Math.max(r1, r2))\n  return (arg1 * m + arg2 * m) / m\n}\n\nfunction stringToDate(dateStr, separator = '-') {\n  const dateArr = dateStr.split(separator);\n  const year = parseInt(dateArr[0]);\n  let month;\n  if (dateArr[1].indexOf(\"0\") === 0) {\n    month = parseInt(dateArr[1].substring(1));\n  } else {\n    month = parseInt(dateArr[1]);\n  }\n  var day = parseInt(dateArr[2]);\n  var date = new Date(year, month - 1, day);\n  return date;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/JS/Maps.js\n// module id = mT0Q\n// module chunks = 1","// const echarts = require('echarts');\nexport default class suggestmode {\n  constructor() {\n\n  }\n\n  async initMode( time = '2019-9-1',data = '庐山') {\n    const json = await $.getJSON('static/json/confortable/' + data + '.json')\n    let date = document.getElementById('date')\n    let tempreature = document.getElementById('temprature')\n    let humid = document.getElementById('humid')\n    let speed = document.getElementById('speed')\n    let humanconfrot = document.getElementById('comfortable')\n    let humidtem = document.getElementById('temperaturehumid')\n    for (let i of json) {\n      if (i['日期'] === time) {\n        date.innerText = i['日期']\n        tempreature.innerText = i['温度'] + '℃'\n        humid.innerText = i['湿度'] + '%'\n        speed.innerText = i['风速'] + 'm/s'\n        humanconfrot.innerText = CIHB(i['CIHB'])\n        humidtem.innerText = THI(i['THI'])\n      }\n    }\n  }\n\n}\n\nfunction THI(data) {\n  if (data <= 14.0)\n    return '很冷，不舒服'\n  else if (data <= 16.9)\n    return '偏冷，较不舒服'\n  else if (data <= 25.4)\n    return '感觉舒适'\n  else if (data <= 27.5)\n    return '有热感，较不舒服'\n  else if (data > 27.5)\n    return '闷热难受，不舒服'\n}\n\nfunction CIHB(data) {\n  if (data <= 20)\n    return '寒冷'\n  else if (data <= 40)\n    return '冷'\n  else if (data <= 50)\n    return '凉爽舒适'\n  else if (data <= 70)\n    return '舒适'\n  else if (data <= 80)\n    return '温暖舒适'\n  else if (data <= 85)\n    return '温暖舒适'\n  else if (data > 85)\n    return '温暖舒适'\n}\n\n// function\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/JS/suggestmode.js\n// module id = n7tv\n// module chunks = 1","import {extend} from \"vue-router/src/util/misc\";\n\nconst echarts = require('echarts')\nexport default class heatcalendar {\n  constructor() {\n    this.option = {\n      title: {\n        top: '5%',\n        left: '10%',\n        text: ''\n      },\n      tooltip: {},\n      visualMap: {\n        // min: 0,\n        // max: 10000,\n        calculable: true,\n        type: 'piecewise',\n        orient: 'horizontal',\n        left: 'center',\n        bottom: '5%',\n        // calculable: true,\n        inRange: {\n          color: ['#f5dfa6', '#d40000']\n        }\n      },\n      calendar: {\n        top: '25%',\n        left: '5%',\n        right: '4%',\n        bottom: '20%',\n        cellSize: ['auto', 12],\n        range: ['2019-09-01', '2020-4-13'],\n        itemStyle: {\n          borderWidth: 0.5\n        },\n        yearLabel: {show: false}\n      },\n      series: {\n        type: 'heatmap',\n        coordinateSystem: 'calendar',\n        data: null\n      }\n    };\n    this.Mycharts = echarts.init(document.getElementById('heatmap'))\n    // this.city = ' '\n  }\n\n  initheatmap(city = '上饶市', elm = 'SO2') {\n    // window.city = city\n    getdata(city, elm).then((r) => {\n      // console.log(r)\n      this.option.series.data = r\n      this.option.title.text = city + elm + '2019年9月1日~2020年4月13日情况分布图'\n      this.Mycharts.setOption(this.option)\n    })\n    // console.log(this.city)\n  }\n\n  heatmapevent(rain) {\n    // window.city = this.city\n    let option = this.option\n    let MyCharts = this.Mycharts\n    $(\"#pid\").change(function () {\n      const options = $(\"#pid\");  //获取选中的项\n      const value = options.val();   //拿到选中项的值\n      let city = option.title.text.split('市')[0] + '市'\n\n      getdata(city, value).then((r) => {\n        // console.log(r)\n        let da = r.map(d => {\n          return d[1]\n        })\n        option.visualMap.max = Math.max.apply(null, da)\n        option.series.data = r\n        option.title.text = city + value + '2019年9月1日~2020年4月13日情况分布图'\n        MyCharts.setOption(option)\n      })\n      rain.updateelement(city, value).then(r => r)\n    });\n  }\n\n  // static addheatmap() {\n  //\n  //   getdata(this.city, elm).then((r) => {\n  //     this.option.series.data = r\n  //     this.option.title.text = city + elm + '情况分布图'\n  //     this.Mycharts.setOption(this.option)\n  //   })\n  // }\n}\n\nasync function getdata(city, elm) {\n  let data = await $.getJSON('static/json/elementAir/' + city + '.json')\n  return data.map(e => {\n    return [echarts.format.formatTime('yyyy-MM-dd', e.date), Number.parseFloat(e[elm])]\n  })\n  // console.log(realdata)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/JS/heatcalendar.js\n// module id = w5qk\n// module chunks = 1"],"sourceRoot":""}